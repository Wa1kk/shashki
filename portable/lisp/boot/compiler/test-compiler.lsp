(defmacro test (expr-list expected-res)
  `(let ((program (compile ,expr-list)))
     (print '-----------------)
     (print '---expr-list---)
     (print ,expr-list)
     (print '---compilation---)
     (print program)
     (print '---result---)
     (assert (vm-run program) ,expected-res)))

;; (test '(1 2 3) 3)
;; (test '(a (progn 1 2) (progn (progn))) 2)
;; (test `(1 2 3 ,nil (a) (b) (c)) nil)
;; (test '(a b (progn 1 2) (progn (progn 1))) 1)
;; (test '(a a a a a a a a a) 'a)
;; (compile '(a (progn 1) 2 3))

;(test '(progn 1 2 3) 3)
(test '(progn (progn 2 (progn 11) 4) (progn 3)) 3)
;(test '(progn) nil)
;(test '(progn (progn (progn) (progn 1)) 2) 2)
