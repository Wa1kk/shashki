(defvar *window-list* nil)
(defvar *current-window-pos* '(0 . 0))
(defvar *max-windows-bottom* 0)
  
(defmacro window (text &rest params)
  `(let* ((new-window (make-instance window))
	  (x (car *current-window-pos*))
          (y (cdr *current-window-pos*))
	  (width 0)
	  (height 0))
     (set-defaults new-window)
     (setf (slot new-window 'text) ,text)
     (setq *window-list* (append (list new-window) *window-list*))
     (setf (slot new-window 'x) x)
     (setf (slot new-window 'y) y)     
     (setf (slot new-window 'width) (+ (slot new-window 'width) (string-size ,text)))
     ,@(map '(lambda (elem) `(setf (slot new-window ',(car elem)) ,(cadr elem))) params)
     (setq width (slot new-window 'width))
     (setq height (slot new-window 'height))
     (when (> (+ y height) *max-windows-bottom*) (setq *max-windows-bottom* (+ y height)))
     (when (> (+ x width) *screen-width*)
       (setq x 0)
       (setq y *max-windows-bottom*)
       (setq *max-windows-bottom* (+ y height))
       (setf (slot new-window 'x) x)
       (setf (slot new-window 'y) y))       
     (setq *current-window-pos* (cons (+ x width) y))
     new-window))

(defun screen (&rest windows)
  (app '(lambda (w) (draw w)) windows))

;(setq elem2 (make-element 0 0 3 4 "test" +blue+ +red+ +green+ nil nil 0 '(0 . 0) #(0 0 0 0)))
;(setq elem (make-window 5 5 2 6 "test12" +cyan+ +magenta+ +green+ nil nil 0 '(0 . 0) #(0 0 0 0)))
;(setq elem3 (make-element 0 0 3 5 "test" +green+ +yellow+ +green+ nil nil 0 '(0 . 0) #(0 0 0 0)))
;(setq elem4 (make-element 0 0 3 15 "test" +blue+ +dark-gray+ +green+ nil nil 0 '(0 . 0) #(0 0 0 0)))
;(setq elem5 (make-element 0 0 3 10 "test" +blue+ +light-green+ +green+ nil nil 0 '(0 . 0) #(0 0 0 0)))
;(setq elem6 (make-window 15 2 70 8 "test" +cyan+ +magenta+ +green+ nil nil 0 '(0 . 0) #(0 0 0 0)))
;(set-defaults elem5)
;(set-defaults elem)
;(add-child elem elem2)
;(add-child elem elem3)
;(add-child elem elem4)
;(add-child elem elem5)
;(align elem4 'left)
;(align elem2 'center)
;(align elem3 'right)
;(draw elem)
;(draw elem6)

(screen
 (window "test1")
 (window "test111111111111111111111111111111111111111111")
 (window "test3"(height 15) (back-color +green+))
 (window "test4"(width 20) (height 10)))
